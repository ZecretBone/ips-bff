// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/RyuChk/wire-provider/gin/provider"
	"github.com/ZecretBone/ips-bff/cmd/bff-api/handler"
	"github.com/ZecretBone/ips-bff/cmd/bff-api/server"
	"github.com/ZecretBone/ips-bff/internal/config"
	"github.com/ZecretBone/ips-bff/internal/di"
	rssiclient2 "github.com/ZecretBone/ips-bff/internal/repository/RSSIClient/rssi"
	"github.com/ZecretBone/ips-bff/internal/repository/RSSIClient/stat"
	"github.com/google/wire"
)

// Injectors from di.go:

func InitializeContainer() (*Container, func(), error) {
	grpcConfig := config.ProvideGRPCServiceConfig()
	service := rssiclient.ProvideRSSIService(grpcConfig)
	rssiclientService := rssiclient2.ProvideRSSIService(grpcConfig)
	rssiHandler := handler.ProvideRSSIHandler(service, rssiclientService)
	handlers := handler.Handlers{
		RSSI: rssiHandler,
	}
	routerCustomizer := server.ProvideGinRouterCustomizer(handlers)
	ginServer, cleanup, err := provider.ProvideGinServer(routerCustomizer)
	if err != nil {
		return nil, nil, err
	}
	container := &Container{
		server: ginServer,
	}
	return container, func() {
		cleanup()
	}, nil
}

// di.go:

var BaseBindingSet = wire.NewSet(
	ProviderSet,
	CustomizerSet, di.DatabaseSet, di.ConfigSet, di.ProviderSet,
)

var MainBindingSet = wire.NewSet(
	BaseBindingSet, provider.WireSet, wire.Struct(new(Container), "*"),
)
